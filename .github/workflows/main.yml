name: Docker Build

on:
  push:
    branches: master

jobs:
  multi:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - name: Dockerfile Validator
        uses: ghe-actions/dockerfile-validator@v1
      - name: Sysdig CIS Dockerfile Benchmark
        uses: sysdiglabs/benchmark-dockerfile@v1.0.0
        with:
          directory: "./"
          dockerfilePattern: "Dockerfile"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - 
        name: Set tag var
        id: vars
        run: echo ::set-output name=docker_tag::$(echo ${GITHUB_REF} | cut -d'/' -f3)-${GITHUB_SHA}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            toddelewis/my-sample-app:latest
            toddelewis/my-sample-app:${{ steps.vars.outputs.docker_tag }}
            ghcr.io/telewis/my-sample-app:latest
            ghcr.io/telewis/my-sample-app:${{ steps.vars.outputs.docker_tag }}
      - 
        name: Install Nix
        uses: cachix/install-nix-action@v10
        with:
          ÃŸnix_path: nixpkgs=channel:nixos-unstable
      - 
        name: Nix Shell
        uses: workflow/nix-shell-action@v1
        with:
          packages: docker
          script: |
            docker images
      - 
        name: Scan with Phonito Security
        uses: phonito/phonito-scanner-action@master
        with:
          image: ghcr.io/telewis/my-sample-app:${{ steps.vars.outputs.docker_tag }}
          phonito-token: '${{ secrets.PHONITO_TOKEN }}'
          