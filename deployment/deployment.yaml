---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-sample-app
  namespace: my-sample-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-sample-app
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app: my-sample-app
    spec:
      containers:
      - name: my-sample-app
        image: ghcr.io/telewis/my-sample-app:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        startupProbe:
          tcpSocket:
            port: 8080
        readinessProbe:
          tcpSocket:
            port: 8080
        livenessProbe:
          tcpSocket:
            port: 8080
        resources:
          requests: 
            memory: "50M"
            cpu: ".1"
          limits:
            memory: "50M"
            cpu: ".1"
        envFrom:
        - configMapRef: 
            name: my-sample-config-map
        env:
        - name: secret
          valueFrom:
            secretKeyRef:
              name: my-sample-app
              key: password
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100 
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - my-sample-app
              topologyKey: "kubernetes.io/hostname"
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-sample-app
  namespace: my-sample-app
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: my-sample-app

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: my-sample-app
  namespace: my-sample-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: my-sample-app
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50

---
apiVersion: v1
kind: Service
metadata:
  name: my-sample-app
  namespace: my-sample-app
spec:
  selector:
    app: my-sample-app
  ports:
  - port: 80
    targetPort: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-sample-app
  namespace: my-sample-app
  annotations: 
    cert-manager.io/cluster-issuer: "letsencrypt"
    acme.cert-manager.io/http01-edit-in-place: "true" 
spec:
  tls:
    - hosts:
      - "my-sample-app.startrek.toddelewis.net"
      secretName: my-sample-app-tls-cert
  rules:
  - host: my-sample-app.startrek.toddelewis.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-sample-app
            port: 
              number: 80

